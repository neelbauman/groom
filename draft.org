-*- mode:org; -*-

* トピックごとにブランチを使い分けたい
** 理由
*** 特定の期間のみに適用させたいスケジュールもある。
*** デフォルトのスケジュールはもちろん残したい
*** habit機能も使いたい
*** エントリが増えると、重複やなんやかんやでagenda viewが見づらくなる
**** Daily Viewでのフィルタ機能はかゆいところに手が届かない
**** 解決するためにはSexpやLispの勉強をしたり、
**** 同じエントリをいくつもハードコードしなくてはならないらしい

** 


* アイデア
** masterブランチをマスターとして、patchでtopicにキャッチアップさせる!
ポイントは、topicでの編集のうち、
masterに取り込みたくない変更とmasterに取り込みたい変更がある
ということ。
それを、patchファイルを処理することでうまく分別する。

** ワークフロー
*** 作業したいtopicをcheckoutする（トピックAとする）
*** masterにrebaseする
トピックAをチェックアウトして、
直前にチェックアウトされていたトピックBでの進捗がマスターに反映されているとき、
rebaseによってトピックBでの進捗をトピックAに取り込まなければならない
_仮想的に、最新のmasterから新しくトピックAブランチをチェックアウトした_ ように見えるはずである。

トピックAの編集とトピックBでの編集にコンフリクトが起きるならここで解消しなければならないが、
設計上基本的に一貫性のある編集をしているはず。
*** トピックAで作業する
*** トピックAでの編集をcommitする
トピックAにかかずらっている間は、特に何も考えることなくトピックAで作業を継続して良い。

以下のフローは、
+ トピックAを中断してトピックBでスケジュールしたかったり、
+ トピックAが終了して、一度ブランチを閉じるとき
といった場合に必要になる作業である。

*** masterをcheckout
*** topicとmasterのdiffを取って、topic/トピックA.patchに書き出す
この時点で、最新のmasterと最新のtopicとの間のdiff取り出される。
したがって、topicにおける進捗がなくなったとき、topic.patchファイルには
topicからmasterに取り込まれなかった差分のみが残ることになる。
したがって、このmasterを残しておけば、
一度トピックを閉じてブランチを削除したとしても
もう一度同じ名前のブランチを作ってから
そのpatchを適用すれば、最新のmasterからそのtopicのブランチを復元できる。
*** topic/トピックA.patchからmasterに取り込みたい部分だけを抽出して適用
cat topic/topic.patch | sed, awk, grep > tmp.patchを利用
*** masterをcommitする(masterのキャッチアップ)
*** 一番上(topicのcheckout)に戻る


** プロジェクト単位で.orgを生成する
.orgとプロジェクトディレクトリの対応を作ることができる。

** マージではなく、パッチで処理する
なぜなら、.gitattributesでのmerge=ours戦略では、コンフリクト、すなわち共通の祖先に対する矛盾する
編集がぶつかったとき、マージする側の編集内容を採択するため。

* 

